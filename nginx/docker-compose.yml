services:
  nginx:
    image: custom-nginx
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt/live/limhu.fr/fullchain.pem:/etc/nginx/certs/fullchain.pem
      - /etc/letsencrypt/live/limhu.fr/privkey.pem:/etc/nginx/certs/privkey.pem
      - /etc/letsencrypt/live/front.limhu.scrypteur.com/fullchain.pem:/etc/nginx/certs/fullchain.front.pem
      - /etc/letsencrypt/live/front.limhu.scrypteur.com/privkey.pem:/etc/nginx/certs/privkey.front.pem
      - /etc/letsencrypt/live/back.limhu.scrypteur.com/fullchain.pem:/etc/nginx/certs/fullchain.back.pem
      - /etc/letsencrypt/live/back.limhu.scrypteur.com/privkey.pem:/etc/nginx/certs/privkey.back.pem
      - /etc/letsencrypt/live/admr.limhu.scrypteur.com/fullchain.pem:/etc/nginx/certs/fullchain.admr.pem
      - /etc/letsencrypt/live/admr.limhu.scrypteur.com/privkey.pem:/etc/nginx/certs/privkey.admr.pem
      - ./limhu:/var/www/html/limhu
    ports:
      - 80:80
      - 443:443
    networks:
      - webnet

  front:
    image: "evrardpi/limhu-frontend:1.0.0"
    environment:
      VITE_API_URL: "https://back.limhu.scrypteur.com"
    ports:
      - 8081:8080
    networks:
      - webnet

  back:
    image: "evrardpi/limhu-backend:1.0.0"
    environment:
      PORT: 80
      DEBUG: "False"
      ALLOWED_HOSTS: "*"
      DATABASE_HOST: postgres
      DATABASE_PORT: "5432"
      DATABASE_NAME: postgres
      DATABASE_USER: postgres
      DATABASE_PARAMS: ?sslmode=disable
      DATABASE_MIN_CONNECTIONS: "1"
      DATABASE_MAX_CONNECTIONS: "10"
      DATABASE_CONNECTION_TIMEOUT: "30"
      DATABASE_PASSWORD: "lemeilleurprofestquentin1+"
    ports:
      - 8082:80
    networks:
      - webnet
      - dbnet

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "lemeilleurprofestquentin1+"
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      #- ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", postgres]
      interval: 1s
      timeout: 5s
      retries: 5
    networks:
      - dbnet

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8083:8080
    networks:
      - webnet
      - dbnet

  samba:
    image: dperson/samba
    restart: unless-stopped
    environment:
      - USERID=1000
      - GROUPID=1000
    ports:
      - 139:139
      - 445:445
    volumes:
      - samba:/mount
    command: '-u "sambauser;sambapassword" -s "share;/mount;yes;no;no;all;sambauser"'
    networks:
      - webnet
      - dbnet

volumes:
  postgres_data:
  samba:

networks:
  webnet:
  dbnet:
